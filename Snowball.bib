
% This is the bibtex verison file of our paper selection.
% This is the result of paper backtracking, including author snowball and forward & backward snowball.
% In the end, we got 64 papers.



@article{
ShahrivarElahi-212,
   Author = {Shahrivar, Shahrokh and Elahi, Shaban and Hassanzadeh, Alireza and Montazer, Gholamali},
   Title = {A business model for commercial open source software: A systematic literature review},
   Journal = {Information and Software Technology},
   Volume = {103},
   Pages = {202-214},
   DOI = {https://doi.org/10.1016/j.infsof.2018.06.018},
   Abstract = {{Context},
   Keywords = {Business model, Commercial open source software (COSS), Systematic literature review},
   Year = {2018} }




@inproceedings{
GurbaniGarvert-169,
   Author = {Gurbani, Vijay and Garvert, Anita and Herbsleb, James},
   Title = {A case study of a corporate open source development model},
   BookTitle = {Proceedings of the 28th international conference on Software engineering},
   Series= {Proceedings of the 28th international conference on Software engineering},
   Address= {Shanghai, China},
   Publisher = {ACM},
   Pages = {472-481},
   Note  = {Conference Proceedings
ER  -
http://www.syndetics.com/index.aspx?isbn=9781595933751/sc.gif&client=summontrial&freeimage=true;http://www.syndetics.com/index.aspx?isbn=9781595933751/mc.gif&client=summontrial&freeimage=true;http://www.syndetics.com/index.aspx?isbn=9781595933751/lc.gif&client=summontrial&freeimage=true;},
   Abstract = {Open source practices and tools have proven to be highly effective for overcoming the many problems of geographically distributed software development. We know relatively little, however, about the range of settings in which they work. In particular, can corporations use the open source development model effectively for software projects inside the corporate domain? Or are these tools and practices incompatible with development environments, management practices, and market-driven schedule and feature decisions typical of a commercial software house? We present a case study of open source software development methodology adopted by a significant commercial software project in the telecommunications domain. We extract a number of lessons learned from the experience, and identify open research questions.},
   Keywords = {architecture; open source; session initiation protocol; software development},
   Year = {2006} }




@article{
CapekFrank-217,
   Author = {Capek, Peter G. and Frank, Steven P. and Gerdt, Steve and Shields, David},
   Title = {A history of IBM's open-source involvement and strategy},
   Journal = {IBM systems journal},
   Volume = {44},
   Number = {2},
   Pages = {249--257},
   Year = {2005} }




@article{
M.-28,
   Author = {M., Aberdour},
   Title = {Achieving Quality in Open-Source Software},
   Journal = {IEEE Software},
   Volume = {24},
   Number = {1},
   Pages = {58-64},
   DOI = {10.1109/MS.2007.2},
   Note = {IEEE Software
IEEE Software},
   Abstract = {The open source software community has published a substantial body of research on OSS quality. Focusing on this peer-reviewed body of work lets us draw conclusions from empirical data rather than rely on the large volume of evangelical opinion that has historically dominated this field. This body of published research has become much more critical and objective in its efforts to understand OSS development, and a consensus has emerged on the key components of high-quality OSS delivery. This article reviews this body of research and draws out lessons learned, investigating how the approaches used to deliver high-quality OSS differ from, and can be incorporated into, closed-source software development
The open source software community has published a substantial body of research on OSS quality. Focusing on this peer-reviewed body of work lets us draw conclusions from empirical data rather than rely on the large volume of evangelical opinion that has historically dominated this field. This body of published research has become much more critical and objective in its efforts to understand OSS development, and a consensus has emerged on the key components of high-quality OSS delivery. This article reviews this body of research and draws out lessons learned, investigating how the approaches used to deliver high-quality OSS differ from, and can be incorporated into, closed-source software development},
   Keywords = {Open source software; Software quality; Quality management; Software testing; Project management; Risk management; Programming; Documentation; Quality assurance; Phase measurement; open source; quality; testing},
   Year = {2007} }




@article{
MarsanPar E-218,
   Author = {Marsan, Josianne and Par E, Guy and Beaudry, Anne},
   Title = {Adoption of open source software in organizations: A socio-cognitive perspective},
   Journal = {The Journal of Strategic Information Systems},
   Volume = {21},
   Number = {4},
   Pages = {257--273},
   Year = {2012} }




@article{
BonaccorsiRossi-46,
   Author = {Bonaccorsi, Andrea and Rossi, Cristina},
   Title = {Altruistic individuals, selfish firms? The structure of motivation in Open Source software},
   Journal = {First Monday},
   Volume = {9},
   Number = {1},
   DOI = {10.5210/fm.v9i1.1113},
   Note = {Journal Article
http://www.syndetics.com/index.aspx?isbn=/sc.gif&issn=1396-0466&client=summontrial;http://www.syndetics.com/index.aspx?isbn=/mc.gif&issn=1396-0466&client=summontrial;http://www.syndetics.com/index.aspx?isbn=/lc.gif&issn=1396-0466&client=summontrial;},
   Keywords = {Companies; Motivation; Open systems; Software; Staff; Surveys},
   Year = {2004} }




@article{
E.C.-160,
   Author = {E., Capra and C., Francalanci and F., Merlo},
   Title = {An Empirical Study on the Relationship Between Software Design Quality, Development Effort and Governance in Open Source Projects},
   Journal = {IEEE Transactions on Software Engineering},
   Volume = {34},
   Number = {6},
   Pages = {765-782},
   DOI = {10.1109/TSE.2008.68},
   Note = {IEEE Transactions on Software Engineering
IEEE Transactions on Software Engineering},
   Abstract = {The relationship among software design quality, development effort, and governance practices is a traditional research problem. However, the extent to which consolidated results on this relationship remain valid for open source (OS) projects is an open research problem. An emerging body of literature contrasts the view of open source as an alternative to proprietary software and explains that there exists a continuum between closed and open source projects. This paper hypothesizes that as projects approach the OS end of the continuum, governance becomes less formal. In turn a less formal governance is hypothesized to require a higher-quality code as a means to facilitate coordination among developers by making the structure of code explicit and facilitate quality by removing the pressure of deadlines from contributors. However, a less formal governance is also hypothesized to increase development effort due to a more cumbersome coordination overhead. The verification of research hypotheses is based on empirical data from a sample of 75 major OS projects. Empirical evidence supports our hypotheses and suggests that software quality, mainly measured as coupling and inheritance, does not increase development effort, but represents an important managerial variable to implement the more open governance approach that characterizes OS projects which, in turn, increases development effort.
The relationship among software design quality, development effort, and governance practices is a traditional research problem. However, the extent to which consolidated results on this relationship remain valid for open source (OS) projects is an open research problem. An emerging body of literature contrasts the view of open source as an alternative to proprietary software and explains that there exists a continuum between closed and open source projects. This paper hypothesizes that as projects approach the OS end of the continuum, governance becomes less formal. In turn a less formal governance is hypothesized to require a higher-quality code as a means to facilitate coordination among developers by making the structure of code explicit and facilitate quality by removing the pressure of deadlines from contributors. However, a less formal governance is also hypothesized to increase development effort due to a more cumbersome coordination overhead. The verification of research hypotheses is based on empirical data from a sample of 75 major OS projects. Empirical evidence supports our hypotheses and suggests that software quality, mainly measured as coupling and inheritance, does not increase development effort, but represents an important managerial variable to implement the more open governance approach that characterizes OS projects which, in turn, increases development effort.},
   Keywords = {Software design; Open source software; Software quality; Costs; Project management; Software measurement; Quality management; Companies; Software development management; Equations; Cost estimation; Qualitative process analysis; Organizational management and coordination; Management; Complexity measures; Process metrics; Metrics/Measurement; Software Engineering; Software/Software Engineering; Cost estimation; Qualitative process analysis; Organizational management and coordination; Management; Complexity measures; Process metrics; Metrics/Measurement; Software Engineering; Software/Software Engineering},
   Year = {2008} }




@article{
MorganFinnegan-207,
   Author = {Morgan, Lorraine and Finnegan, Patrick},
   Title = {Beyond free software: An exploration of the business value of strategic open source},
   Journal = {The Journal of Strategic Information Systems},
   Volume = {23},
   Number = {3},
   Pages = {226--238},
   Year = {2014} }




@book{
LindmanJuutilainen-173,
   Author = {Lindman, J. and Juutilainen, J. P. and Rossi, M.},
   Title = {Beyond the Business Model: Incentives for Organizations to Publish Software Source Code},
   Publisher = {Springer Berlin Heidelberg},
   Address = {Berlin, Heidelberg},
   Volume = {299},
   Series = {OPEN SOURCE ECOSYSTEMS-DIVERSE COMMUNITIES INTERACTING},
   Note = {Book, Section ER  -
http://www.syndetics.com/index.aspx?isbn=/sc.gif&issn=1868-4238&client=summontrial;http://www.syndetics.com/index.aspx?isbn=/mc.gif&issn=1868-4238&client=summontrial;http://www.syndetics.com/index.aspx?isbn=/lc.gif&issn=1868-4238&client=summontrial;},
   Abstract = {The software stack opened under Open Source Software (OSS) licenses is growing rapidly. Commercial actors have released considerable amounts of previously proprietary source code. These actions beg the question why companies choose a strategy based on giving away software assets'? Research on outbound OSS approach has tried to answer this question with the concept of the "OSS business model". When studying the reasons for code release, we have observed that the business model concept is too generic to capture the many incentives organizations have. Conversely, in this paper we investigate empirically what the companies' incentives are by means of an exploratory case study of three organizations in different stages of their code release. Our results indicate that the companies aim to promote standardization, obtain development resources, gain cost savings, improve the quality of software, increase the trustworthiness of software, or steer OSS communities. We conclude that future research on outbound OSS could benefit from focusing on the heterogeneous incentives for code release rather than on revenue models.},
   Keywords = {Consultancy Service; Open Source Software; Philips Medical System; Software Product Line; Source Code},
   Year = {2009} }




@inproceedings{
A.D.-166,
   Author = {A., Bonaccorsi and D., Lorenzi and M., Merito and C., Rossi},
   Title = {Business Firms' Engagement in Community Projects. Empirical Evidence and Further Developments of the Research},
   BookTitle = {First International Workshop on Emerging Trends in FLOSS Research and Development (FLOSS'07: ICSE Workshops 2007)},
   Series= {First International Workshop on Emerging Trends in FLOSS Research and Development (FLOSS'07: ICSE Workshops 2007)},
   Publisher = {IEEE Computer Society},
   Pages = {13-13},
   Note  = {Conference Proceedings
ER  -
http://www.syndetics.com/index.aspx?isbn=9780769529615/sc.gif&client=summontrial&freeimage=true;http://www.syndetics.com/index.aspx?isbn=9780769529615/mc.gif&client=summontrial&freeimage=true;http://www.syndetics.com/index.aspx?isbn=9780769529615/lc.gif&client=summontrial&freeimage=true;},
   Abstract = {At present, more and more commercial firms are getting involved, to various extents, in the Open Source (OS) movement. While several studies have examined incentives and business models of these OS-based software companies, very few works have investigated whether and how firms actively participate to open projects. This paper contributes to the literature by providing empirical evidence on the role and the activities of software houses in community developed projects. The research proposes an original methodology of large-scale primary data collection from OS project repositories and linked web sites. The findings show how different today's OS movement is from its origins and how important firm involvement has become.
At present, more and more commercial firms are getting involved, to various extents, in the Open Source (OS) movement. While several studies have examined incentives and business models of these OS-based software companies, very few works have investigated whether and how firms actively participate to open projects. This paper contributes to the literature by providing empirical evidence on the role and the activities of software houses in community developed projects. The research proposes an original methodology of large-scale primary data collection from OS project repositories and linked web sites. The findings show how different today's OS movement is from its origins and how important firm involvement has become.},
   Keywords = {Business; Open source software; Large-scale systems; Protection; Companies; Web and internet services; Production; Boring; Costs; Research and development},
   Year = {2007} }




@misc{
Daffara-214,
   Author = {Daffara, Carlo},
   Title = {Business models in FLOSS-based companies},
   Year = {2007} }




@article{
WestGallagher-29,
   Author = {West, Joel and Gallagher, Scott},
   Title = {Challenges of open innovation: the paradox of firm investment in open-source software},
   Journal = {R and D Management},
   Volume = {36},
   Number = {3},
   Pages = {319-331},
   DOI = {10.1111/j.1467-9310.2006.00436.x},
   Note = {identifier: 10.1111/j.1467-9310.2006.00436.x},
   Year = {2006} }




@incollection{
BauerHarutyunyan-136,
   Author = {Bauer, Andreas and Harutyunyan, Nikolay and Riehle, Dirk and Schwarz, Georg-Daniel},
   Title = {Challenges of Tracking and Documenting Open Source Dependencies in Products: A Case Study},
   Publisher = {Springer International Publishing},
   Address = {Cham},
   Pages = {25-35},
   Note = {Book, Section ER  -
http://www.syndetics.com/index.aspx?isbn=/sc.gif&issn=1868-4238&client=summontrial;http://www.syndetics.com/index.aspx?isbn=/mc.gif&issn=1868-4238&client=summontrial;http://www.syndetics.com/index.aspx?isbn=/lc.gif&issn=1868-4238&client=summontrial;},
   Abstract = {Software vendors need to manage the dependencies of the open source components used in their products. Without this management, license compliance would be impossible, export restrictions could not be maintained, and security vulnerabilities would remain unknown to the vendor.  The management of these dependencies has grown in an ad-hoc fashion in most companies. As such, vendors find it hard to learn from each other and improve practices.  To address this problem, we performed exploratory single-case study research at one large established software vendor. We gathered and analyzed the key challenges of tracking and documenting open source dependencies in products. We wanted to understand whether these ad-hoc solutions could be based on a single unified conceptual model for managing dependencies.  Our study suggests that underlying the various point solutions that we found at this vendor lies a conceptual model that we tentatively call the product (architecture) model. In future cross-vendor work, we will investigate whether this conceptual model can be expanded to become a unifying model for all open source dependency management.},
   Keywords = {FLOSS; FOSS; Open source governance; Open source software},
   Year = {2020} }




@phdthesis{
Snarby-216,
   Author = {Snarby, Terje},
   Title = {Collaboration Patterns among Commercial Firms in Community-Based OSS Projects},
   School = {Institutt for datateknikk og informasjonsvitenskap},
   Type = {masterssnarby2013collaboration,},
   Year = {2013} }




@article{
GermonprezKendall-182,
   Author = {Germonprez, Matt and Kendall, Julie E. and Kendall, Kenneth E. and Young, Brett},
   Title = {Collectivism, creativity, competition, and control in open source software development: reflections on the emergent governance of the SPDX® working group},
   Journal = {International Journal of Information Systems and Management},
   Volume = {1},
   Number = {1-2},
   Pages = {125-145},
   Year = {2014} }




@article{
Y.H.-30,
   Author = {Y., Zhang and H., He and M., Zhou},
   Title = {Commercial Participation in OpenStack: Two Sides of a Coin},
   Journal = {Computer},
   Volume = {55},
   Number = {2},
   Pages = {78-84},
   DOI = {10.1109/MC.2021.3133052},
   Note = {Computer
Computer},
   Abstract = {This article provides a landscape of commercial participation in OpenStack, a large-scale open source software (OSS) ecosystem. We discuss how to achieve a balance between maximizing business profit and ensuring the long-term sustainability of OSS ecosystems.
This article provides a landscape of commercial participation in OpenStack, a large-scale open source software (OSS) ecosystem. We discuss how to achieve a balance between maximizing business profit and ensuring the long-term sustainability of OSS ecosystems.},
   Year = {2022} }




@article{
Van der LindenLundell-204,
   Author = {Van der Linden, Frank and Lundell, Björn and Marttiin, Pentti},
   Title = {Commodification of industrial software: A case for open source},
   Journal = {IEEE software},
   Volume = {26},
   Number = {4},
   Pages = {77-83},
   Year = {2009} }




@inproceedings{
Y.X.-195,
   Author = {Y., Zhang and X., Tan and M., Zhou and Z., Jin},
   Title = {Companies' Domination in FLOSS Development - An Empirical Study of OpenStack},
   BookTitle = {2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion)},
   Series= {2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion)},
   Address= {Gothenburg, Sweden},
   Publisher = {Association for Computing Machinery},
   Pages = {440-441},
   Abstract = {Commercial participation continues to grow in free/libre open source software (FLOSS) projects. Companies may take the lead in developing FLOSS rather than volunteers, which may change the nature of FLOSS development and affect the FLOSS community. Despite substantial research on commercial participation, it remains unclear whether companies dominate FLOSS development, to what extent the domination exists and whether the domination affects the FLOSS community. We therefore conduct an empirical study on OpenStack with a focus on its four main projects (Nova, Swift, Glance, and Neutron) to explore the commercial domination. We employ the development data of the four projects to quantify companies' contributions from two aspects: the developers they provided and the commits made by those developers. We find that there are nearly half of the versions, in which the four projects are dominated by one company. The dominant companies change occasionally, but the number never exceeds three for any project. We found that the commercial domination is negatively associated with the participation of companies and contributors, while it is positively associated with the productivity of contributors and the quality of issue reports. Our study contributes to the understanding of commercial domination and its impact on FLOSS community. Our findings reveal the adverse consequences brought by commercial domination in addition to its benefits.
Commercial participation continues to grow in free/libre open source software (FLOSS) projects. Companies may take the lead in developing FLOSS rather than volunteers, which may change the nature of FLOSS development and affect the FLOSS community. Despite substantial research on commercial participation, it remains unclear whether companies dominate FLOSS development, to what extent the domination exists and whether the domination affects the FLOSS community. We therefore conduct an empirical study on OpenStack with a focus on its four main projects (Nova, Swift, Glance, and Neutron) to explore the commercial domination. We employ the development data of the four projects to quantify companies' contributions from two aspects: the developers they provided and the commits made by those developers. We find that there are nearly half of the versions, in which the four projects are dominated by one company. The dominant companies change occasionally, but the number never exceeds three for any project. We found that the commercial domination is negatively associated with the participation of companies and contributors, while it is positively associated with the productivity of contributors and the quality of issue reports. Our study contributes to the understanding of commercial domination and its impact on FLOSS community. Our findings reveal the adverse consequences brought by commercial domination in addition to its benefits.},
   Keywords = {Companies; Measurement; Entropy; Software engineering; Open source software; Correlation; FLOSS project; commercial participation; companies' domination},
   Year = {2018} }




@article{
Y.M.-40,
   Author = {Y., Zhang and M., Zhou and A., Mockus and Z., Jin},
   Title = {Companies’ Participation in OSS Development–An Empirical Study of OpenStack},
   Journal = {IEEE Transactions on Software Engineering},
   Volume = {47},
   Number = {10},
   Pages = {2242-2259},
   DOI = {10.1109/TSE.2019.2946156},
   Note = {IEEE Transactions on Software Engineering
IEEE Transactions on Software Engineering},
   Abstract = {Commercial participation continues to grow in open source software (OSS) projects and novel arrangements appear to emerge in company-dominated projects and ecosystems. What is the nature of these novel arrangements? Does volunteers’ participation remain critical for these ecosystems? Despite extensive research on commercial participation in OSS, the exact nature and extent of company contributions to OSS development, and the impact of this engagement may have on the volunteer community have not been clarified. To bridge the gap, we perform an exploratory study of OpenStack: a large OSS ecosystem with intense commercial participation. We quantify companies’ contributions via the developers that they provide and the commits made by those developers. We find that companies made far more contributions than volunteers and the distribution of the contributions made by different companies is also highly unbalanced. We observe eight unique contribution models based on companies’ commercial objectives and characterize each model according to three dimensions: contribution intensity, extent, and focus. Companies providing full cloud solutions tend to make both intensive (more than other companies) and extensive (involving a wider variety of projects) contributions. Usage-oriented companies make extensive but less intense contributions. Companies driven by particular business needs focus their contributions on the specific projects addressing these needs. Minor contributors include community players (e.g., the Linux Foundation) and research groups. A model relating the number of volunteers to the diversity of contribution shows a strong positive association between them.
Commercial participation continues to grow in open source software (OSS) projects and novel arrangements appear to emerge in company-dominated projects and ecosystems. What is the nature of these novel arrangements? Does volunteers’ participation remain critical for these ecosystems? Despite extensive research on commercial participation in OSS, the exact nature and extent of company contributions to OSS development, and the impact of this engagement may have on the volunteer community have not been clarified. To bridge the gap, we perform an exploratory study of OpenStack: a large OSS ecosystem with intense commercial participation. We quantify companies’ contributions via the developers that they provide and the commits made by those developers. We find that companies made far more contributions than volunteers and the distribution of the contributions made by different companies is also highly unbalanced. We observe eight unique contribution models based on companies’ commercial objectives and characterize each model according to three dimensions: contribution intensity, extent, and focus. Companies providing full cloud solutions tend to make both intensive (more than other companies) and extensive (involving a wider variety of projects) contributions. Usage-oriented companies make extensive but less intense contributions. Companies driven by particular business needs focus their contributions on the specific projects addressing these needs. Minor contributors include community players (e.g., the Linux Foundation) and research groups. A model relating the number of volunteers to the diversity of contribution shows a strong positive association between them.},
   Keywords = {Companies; Ecosystems; Biological system modeling; Software; Cloud computing; Linux; Open source ecosystem; software development; commercial participation; contribution extent; contribution intensity; contribution focus},
   Year = {2021} }




@article{
SchaarschmidtStol-197,
   Author = {Schaarschmidt, Mario and Stol, Klaas-Jan},
   Title = {Company soldiers and gone-natives: role conflict and career ambition among firm-employed open source developers},
   Year = {2018} }




@article{
BonaccorsiRossi-222,
   Author = {Bonaccorsi, Andrea and Rossi, Cristina},
   Title = {Comparing motivations of individual programmers and firms to take part in the open source movement: From community to business},
   Journal = {Knowledge, Technology \& Policy},
   Volume = {18},
   Number = {4},
   Pages = {40--64},
   Year = {2006} }




@article{
WolfBernhart-239,
   Author = {Wolf, Patricia and Bernhart, Maximilian Joseph},
   Title = {Conceptualizing open distributed innovation: A framework for the collaboration of private companies with grassroots-driven open communities},
   Journal = {Creativity and Innovation Management},
   Volume = {31},
   Number = {2},
   Pages = {340--357},
   Year = {2022} }




@inproceedings{
J.S.-31,
   Author = {J., West and S., O'Mahony},
   Title = {Contrasting Community Building in Sponsored and Community Founded Open Source Projects},
   BookTitle = {Proceedings of the 38th Annual Hawaii International Conference on System Sciences. IEEE, 2005.},
   Series= {Proceedings of the 38th Annual Hawaii International Conference on System Sciences. IEEE, 2005.},
   Publisher = {IEEE},
   Pages = {196c-196c},
   Note  = {Conference Proceedings
ER  -
http://www.syndetics.com/index.aspx?isbn=/sc.gif&issn=1530-1605&client=summontrial;http://www.syndetics.com/index.aspx?isbn=/mc.gif&issn=1530-1605&client=summontrial;http://www.syndetics.com/index.aspx?isbn=/lc.gif&issn=1530-1605&client=summontrial;},
   Abstract = {Prior characterizations of open source projects have been based on the model of a community-founded project. More recently, a second model has emerged, where organizations spinout internally developed code to a public forum. Based on field work on open source projects, we compare the lifecycle differences between these two models. We identify problems unique to spinout projects, particularly in attracting and building an external community. We illustrate these issues with a feasibility analysis of a proposed open source project based on VistA, the primary healthcare information system of the U.S. Department of Veterans Affairs. This example illuminates the complexities of building a community after a code base has been developed and suggests that open source software can be used to transfer technology to the private sector.
Prior characterizations of open source projects have been based on the model of a community-founded project. More recently, a second model has emerged, where organizations spinout internally developed code to a public forum. Based on field work on open source projects, we compare the lifecycle differences between these two models. We identify problems unique to spinout projects, particularly in attracting and building an external community. We illustrate these issues with a feasibility analysis of a proposed open source project based on VistA, the primary healthcare information system of the U.S. Department of Veterans Affairs. This example illuminates the complexities of building a community after a code base has been developed and suggests that open source software can be used to transfer technology to the private sector.},
   Keywords = {Project management; Open source software; Linux; Information analysis; Medical services; Information systems; Intellectual property; Government; Employment; Business},
   Year = {2005} }




@inproceedings{
ZhangStol-196,
   Author = {Zhang, Yuxia and Stol, Klaas-Jan and Liu, Hui and Zhou, Minghui},
   Title = {Corporate dominance in open source ecosystems: a case study of OpenStack},
   BookTitle = {Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
   Series= {Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
   Address= {Singapore, Singapore},
   Publisher = {Association for Computing Machinery},
   Pages = {1048–1060},
   Keywords = {survival analysis, company domination, software development, corporate participation, Open source ecosystem},
   Year = {2022} }




@book{
RoblesDuenas-177,
   Author = {Robles, G. and Duenas, S. and Gonzalez-Barahona, J. M.},
   Title = {Corporate involvement of libre software: Study of presence in Debian code over time},
   Publisher = {Springer US},
   Address = {Boston, MA},
   Volume = {234},
   Series = {OPEN SOURCE DEVELOPMENT, ADOPTION AND INNOVATION},
   Note = {Open Source Development, Adoption and Innovation},
   Abstract = {Although much of the research on the libre (free, open source) phenomenon has been focused on the involvement of volunteers, the role of companies is also important in many projects. In fact, during the last years, the involvement of companies in the libre software world seems to be raising. In this paper we present an study that shows, quantitatively, how important this involvement is in the production of the largest collection of code available for Linux: the Debian GNU/Linux distribution. By studying copyright attributions in source code, we have identified those companies with more attributed code, and the trend of corporate presence in Debian from 1998 to 2004.},
   Keywords = {open source; libre software; involvement of companies; empirical study; software business},
   Year = {2007} }




@misc{
TrinkenreichStol-238,
   Author = {Trinkenreich, Bianca and Stol, Klaas-Jan and Sarma, Anita and German, Daniel M. and Gerosa, Marco A. and Steinmacher, Igor},
   Title = {Do i belong? modeling sense of virtual community among linux kernel contributors},
   Publisher = {IEEE},
   Pages = {319--331},
   Year = {2023} }




@article{
FellerFinnegan-149,
   Author = {Feller, Joseph and Finnegan, Patrick and Fitzgerald, Brian and Hayes, Jeremy},
   Title = {From peer production to productization: A study of socially enabled business exchanges in open source service networks},
   Journal = {Information Systems Research},
   Volume = {19},
   Number = {4},
   Pages = {475-493},
   Year = {2008} }




@inproceedings{
Y.M.-190,
   Author = {Y., Zhang and M., Zhou and K., J. Stol and J., Wu and Z., Jin},
   Title = {How Do Companies Collaborate in Open Source Ecosystems? An Empirical Study of OpenStack},
   BookTitle = {2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)},
   Series= {2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)},
   Publisher = {ACM},
   Pages = {1196-1208},
   Note  = {Conference Proceedings
ER  -},
   Abstract = {Open Source Software (OSS) has come to play a critical role in the software industry. Some large ecosystems enjoy the participation of large numbers of companies, each of which has its own focus and goals. Indeed, companies that otherwise compete, may become collaborators within the OSS ecosystem they participate in. Prior research has largely focused on commercial involvement in OSS projects, but there is a scarcity of research focusing on company collaborations within OSS ecosystems. Some of these ecosystems have become critical building blocks for organizations worldwide; hence, a clear understanding of how companies collaborate within large ecosystems is essential. This paper presents the results of an empirical study of the OpenStack ecosystem, in which hundreds of companies collaborate on thousands of project repositories to deliver cloud distributions. Based on a detailed analysis, we identify clusters of collaborations, and identify four strategies that companies adopt to engage with the OpenStack ecosystem. We alsofind that companies may engage in intentional or passive collaborations, or may work in an isolated fashion. Further, wefi nd that a com-pany's position in the collaboration network is positively associated with its productivity in OpenStack. Our study sheds light on howlarge OSS ecosystems work, and in particular on the patterns of collaboration within one such large ecosystem.
Open Source Software (OSS) has come to play a critical role in the software industry. Some large ecosystems enjoy the participation of large numbers of companies, each of which has its own focus and goals. Indeed, companies that otherwise compete, may become collaborators within the OSS ecosystem they participate in. Prior research has largely focused on commercial involvement in OSS projects, but there is a scarcity of research focusing on company collaborations within OSS ecosystems. Some of these ecosystems have become critical building blocks for organizations worldwide; hence, a clear understanding of how companies collaborate within large ecosystems is essential. This paper presents the results of an empirical study of the OpenStack ecosystem, in which hundreds of companies collaborate on thousands of project repositories to deliver cloud distributions. Based on a detailed analysis, we identify clusters of collaborations, and identify four strategies that companies adopt to engage with the OpenStack ecosystem. We alsofind that companies may engage in intentional or passive collaborations, or may work in an isolated fashion. Further, wefi nd that a com-pany's position in the collaboration network is positively associated with its productivity in OpenStack. Our study sheds light on howlarge OSS ecosystems work, and in particular on the patterns of collaboration within one such large ecosystem.},
   Keywords = {Industries; Productivity; Cloud computing; Ecosystems; Collaboration; Companies; Software engineering; Open source software; OpenStack; company participation; OSS ecosystem; open collaboration; software development},
   Year = {2020} }




@article{
DahlanderMagnusson-42,
   Author = {Dahlander, Linus and Magnusson, Mats},
   Title = {How do Firms Make Use of Open Source Communities?},
   Journal = {Long Range Planning},
   Volume = {41},
   Number = {6},
   Pages = {629-649},
   DOI = {10.1016/j.lrp.2008.09.003},
   Note = {item_number: S0024630108000836
identifier: S0024630108000836},
   Year = {2008} }




@article{
MouakharTellier-208,
   Author = {Mouakhar, Khaireddine and Tellier, Alb E. Ric},
   Title = {How do Open Source software companies respond to institutional pressures? A business model perspective},
   Journal = {Journal of Enterprise Information Management},
   Volume = {30},
   Number = {4},
   Pages = {534--554},
   Year = {2017} }




@article{
West-33,
   Author = {West, Joel},
   Title = {How open is open enough?},
   Journal = {Research Policy},
   Volume = {32},
   Number = {7},
   Pages = {1259-1285},
   DOI = {10.1016/S0048-7333(03)00052-0},
   Note = {item_number: S0048733303000520
identifier: S0048733303000520},
   Year = {2003} }




@misc{
Nguyen DucCruzes-215,
   Author = {Nguyen Duc, Anh and Cruzes, Daniela S. and Ayala, Claudia and Conradi, Reidar},
   Title = {Impact of stakeholder type and collaboration on issue resolution time in oss projects},
   Publisher = {Springer},
   Pages = {1--16},
   Year = {2011} }




@book{
Birkinbine-223,
   Author = {Birkinbine, Benjamin},
   Title = {Incorporating the digital commons: Corporate involvement in free and open source software},
   Publisher = {University of Westminster Press},
   Year = {2020} }




@inproceedings{
O.M.-152,
   Author = {O., Fendt and M., Jaeger and R., J. Serrano},
   Title = {Industrial Experience with Open Source Software Process Management},
   BookTitle = {2016 IEEE 40th Annual Computer Software and Applications Conference (COMPSAC)},
   Series= {2016 IEEE 40th Annual Computer Software and Applications Conference (COMPSAC)},
   Volume = {2},
   Pages = {180-185},
   Abstract = {The usage of external open source software components can improve proprietary software in multiple ways, such as higher quality, lower cost, and faster time-to-market. But in order to fully benefit from its usage there are some important aspects to take into account, as well as significant risks to specifically manage to avoid potential legal consequences. This paper lays out the foundations for a process framework that successfully manages those risks and addresses the intrinsic aspects of open source software usage. Furthermore, it proposes a well-proven basis and best practices for corporate governance, policy, strategy, and process implementation.
The usage of external open source software components can improve proprietary software in multiple ways, such as higher quality, lower cost, and faster time-to-market. But in order to fully benefit from its usage there are some important aspects to take into account, as well as significant risks to specifically manage to avoid potential legal consequences. This paper lays out the foundations for a process framework that successfully manages those risks and addresses the intrinsic aspects of open source software usage. Furthermore, it proposes a well-proven basis and best practices for corporate governance, policy, strategy, and process implementation.},
   Keywords = {Licenses; Open source software; Law; Companies; Computer bugs; Open source software; free software; proprietary software; FOSS; clearing process; code clearance; open source licensing; license analyzer},
   Year = {2016} }




@article{
Llanesde Elejalde-23,
   Author = {Llanes, Gastón and de Elejalde, Ramiro},
   Title = {Industry equilibrium with open-source and proprietary firms},
   Journal = {International Journal of Industrial Organization},
   Volume = {31},
   Number = {1},
   Pages = {36-49},
   DOI = {10.1016/j.ijindorg.2012.09.003},
   Note = {item_number: S0167718712000987
identifier: S0167718712000987},
   Year = {2013} }




@article{
ZhouMockus-41,
   Author = {Zhou, Minghui and Mockus, Audris and Ma, Xiujuan and Zhang, Lu and Mei, Hong},
   Title = {Inflow and Retention in OSS Communities with Commercial Involvement},
   Journal = {ACM Transactions on Software Engineering and Methodology},
   Volume = {25},
   Number = {2},
   Pages = {1-29},
   DOI = {10.1145/2876443},
   Note = {identifier: 10.1145/2876443},
   Year = {2016} }




@incollection{
RossiBonaccorsi-235,
   Author = {Rossi, Cristina and Bonaccorsi, Andrea},
   Title = {Intrinsic motivations and profit-oriented firms in open source software: Do firms practise what they preach?},
   BookTitle = {The economics of open source software development},
   Series = {The economics of open source software development},
   Publisher = {Elsevier},
   Pages = {83--109},
   Year = {2006} }




@article{
RossiBonaccorsi-237,
   Author = {Rossi, Cristina and Bonaccorsi, Andrea},
   Title = {Intrinsic vs. extrinsic incentives in profit--oriented firms supplying Open Source products and services},
   Journal = {First Monday},
   Year = {2005} }




@misc{
NewtonFiore-227,
   Author = {Newton, Olivia B. and Fiore, Stephen M.},
   Title = {Leveraging Corporate Engagement for Diversity in Free/Libre and Open Source Software Projects},
   Publisher = {IEEE},
   Pages = {41--48},
   Year = {2023} }




@article{
LinMaruping-236,
   Author = {Lin, Yu-Kai and Maruping, Likoebe M.},
   Title = {Open source collaboration in digital entrepreneurship},
   Journal = {Organization Science},
   Volume = {33},
   Number = {1},
   Pages = {212--230},
   Year = {2022} }




@article{
OsterlohRota-164,
   Author = {Osterloh, Margit and Rota, Sandra},
   Title = {Open source software development—Just another case of collective invention?},
   Journal = {Research Policy},
   Volume = {36},
   Number = {2},
   Pages = {157-171},
   DOI = {https://doi.org/10.1016/j.respol.2006.10.004},
   Abstract = {Do open source software (OSS) projects represent a new innovation model? Under what conditions can it be employed in other contexts? “Collective invention” regimes usually ended when a dominant design emerged. This is not the case with OSS. Firstly, the OSS community developed the institutional innovation of OSS licenses enabling OSS software to survive as a common property. Secondly, these licenses are mainly enforced by pro-socially motivated contributors. We characterize the conditions under which OSS communities develop and sustain pro-social commitments. We point out the vulnerability of these conditions to developments in patent legislation.},
   Keywords = {New innovaton models; Open source software; Collective invention; Copyleft; Intrinsic motivation},
   Year = {2007} }




@article{
ågerfalkFitzgerald-180,
   Author = {Ågerfalk, Pär J. and Fitzgerald, Brian},
   Title = {Outsourcing to an Unknown Workforce: Exploring Opensurcing as a Global Sourcing Strategy},
   Journal = {MIS quarterly},
   Volume = {32},
   Number = {2},
   Pages = {385-409},
   DOI = {10.2307/25148845},
   Note = {Journal Article
http://www.syndetics.com/index.aspx?isbn=/sc.gif&issn=0276-7783&client=summontrial;http://www.syndetics.com/index.aspx?isbn=/mc.gif&issn=0276-7783&client=summontrial;http://www.syndetics.com/index.aspx?isbn=/lc.gif&issn=0276-7783&client=summontrial;},
   Abstract = {This paper presents a psychological contract perspective on the use of the open source development model as a global sourcing strategy-opensourcing, as we term it here-whereby commerical companies and open source communities collaborate on development of software of commercial interest to the company. Building on previous research on information systems outsourcing, a theoretical framework for exploring the opensourcing phenomenon is derived. The first phase of the research concerned qualitative case studies involving three commercial organizations (IONA Technologies, Philips Medical Systems, and Telefonica) that had "liberated" what had hitherto been proprietary software and sought to grow a global open source community around their product. We followed this with a large-scale survey involving additional exemplars of the phenomenon. The study identifies a number of symmetrical and complementary customer and community obligations that are associated with opensourcing success. We also identify a number of tension points on which customer and community perceptions tend to vary. Overall the key watchwords for opensourcing are openness, trust, tact, professionalism, transparency, and complementariness: The customer and community need to establish a trusted partnership of shared responsibility in building an overall opensourcing ecosystem. The study reveals an ongoing shift from OSS as a community of individual developers to OSS as a community of commercial organizations, primarily small to medium-sized enterprises. It also reveals that opensourcing provides ample opportunity for companies to headhunt top developers, hence moving from outsourcing to a largely unknown OSS workforce toward recruitment of developers from a global open source community whose talents have become known as a result of the opensourcing experience.},
   Keywords = {Community relations; Computer software; Consumer goods industries; Ecological sustainability; Ecosystems; Information storage and retrieval systems; Open source software; Outsourcing; Software engineering; Workforce},
   Year = {2008} }




@book{
HaugeZiemer-168,
   Author = {Hauge, O. and Ziemer, S.},
   Title = {Providing Commercial Open Source Software: Lessons Learned},
   Publisher = {Springer},
   Volume = {299},
   Series = {OPEN SOURCE ECOSYSTEMS-DIVERSE COMMUNITIES INTERACTING},
   Abstract = {Even though companies like Sun, IBM, MySQL and others have released several commercial Open Source Software (OSS) products, little evidence exist of how to successfully launch such products and establish a living community around them. This paper presents a case study from a small software company succeeding at establishing a business model and a vivid community around their own OSS products. Based on this case study, the paper presents lessons learned which could help other OSS providers.},
   Year = {2009} }




@article{
DahlanderMagnusson-209,
   Author = {Dahlander, Linus and Magnusson, Mats G.},
   Title = {Relationships between open source software companies and communities: Observations from Nordic firms},
   Journal = {Research policy},
   Volume = {34},
   Number = {4},
   Pages = {481--493},
   Year = {2005} }




@article{
GuizaniCastro-Guzman-206,
   Author = {Guizani, Mariam and Castro-Guzman, Aileen Abril and Sarma, Anita and Steinmacher, Igor},
   Title = {Rules of Engagement: Why and How Companies Participate in OSS},
   Journal = {arXiv preprint arXiv:2303.08266},
   Year = {2023} }




@article{
Riehle-224,
   Author = {Riehle, Dirk},
   Title = {Single-vendor open source firms},
   Journal = {Computer},
   Volume = {53},
   Number = {4},
   Pages = {68--72},
   Year = {2020} }




@book{
HaugeSorensen-167,
   Author = {Hauge, O. and Sorensen, C. F. and Rosdal, A.},
   Title = {Surveying industrial roles in open source software development},
   Publisher = {Springer},
   Volume = {234},
   Series = {OPEN SOURCE DEVELOPMENT, ADOPTION AND INNOVATION},
   Abstract = {Industry uses Open Source Software (OSS) to a greater and greater extent. We have defined four industrial OSS roles; OSS provider, OSS integrator, OSS participant and Inner Source Software (ISS) participant. Based on these four roles we have performed a survey in the ITEA COSI project. We provide initial answers to what motivates companies to undertake these roles, what are the advantages and challenges of undertaking them, and which development practices they use while undertaking these roles.},
   Keywords = {open source; industry; roles; survey; motivations; development practices},
   Year = {2007} }




@book{
Riehle-153,
   Author = {Riehle, D.},
   Title = {The Commercial Open Source Business Model},
   Publisher = {Springer},
   Volume = {36},
   Series = {VALUE CREATION IN E-BUSINESS MANAGEMENT},
   Abstract = {Commercial open source software projects are open source software projects that are owned by a single firm that derives a direct and significant revenue stream from the software. Commercial open source at first glance represents an economic paradox: How can a firm earn money if it is making its product available for free as open source? This paper presents the core properties of commercial open source business models and discusses how they work. Using a commercial open source approach, firms can get to market faster with a superior product at lower cost than possible for traditional competitors. The paper shows how these benefits accrue from an engaged and self-supporting user community. Lacking any prior comprehensive reference, this paper is based on an analysis of public statements by practitioners of commercial open source. It forges the various anecdotes into a coherent description of revenue generation strategies and relevant business functions.},
   Keywords = {Open source; open source software; commercial open source; community open source; commercial open source business model; dual-licensing strategy; open core business model; business model; go-to-market strategy; open source sales; open source marketing; open source product management; open source licensing; software engineering; collaborative development},
   Year = {2009} }




@book{
O NeilCai-220,
   Author = {O Neil, Mathieu and Cai, Xiaolan and Muselli, Laure and Pailler, Fred and Zacchiroli, Stefano},
   Title = {The coproduction of open source software by volunteers and big tech firms},
   Publisher = {News and Media Research Centre},
   Year = {2021} }




@article{
D.-150,
   Author = {D., Riehle},
   Title = {The Economic Motivation of Open Source Software: Stakeholder Perspectives},
   Journal = {Computer},
   Volume = {40},
   Number = {4},
   Pages = {25-32},
   DOI = {10.1109/MC.2007.147},
   Note = {Computer
Computer},
   Abstract = {Open source software has enabled large system integrators to increase their profits through cost savings and reach more customers due to flexible pricing. This has upset existing ecosystems and shuffled structural relationships, resulting in the emergence of firms providing consulting services to open source projects. This new breed of service firm in turn lives or dies by its ability to recruit and retain appropriate talent. For such talent, in particular for software developers, life has become more difficult and exciting at once. Developers face new career prospects and paths, since their formal position in an open source project, in addition to their experience and capabilities, determines their value to an employer. Economically rational developers strive to become commiters to high-profile open source projects to further their careers, which in turn generates more recognition, independence, and job security
Open source software has enabled large system integrators to increase their profits through cost savings and reach more customers due to flexible pricing. This has upset existing ecosystems and shuffled structural relationships, resulting in the emergence of firms providing consulting services to open source projects. This new breed of service firm in turn lives or dies by its ability to recruit and retain appropriate talent. For such talent, in particular for software developers, life has become more difficult and exciting at once. Developers face new career prospects and paths, since their formal position in an open source project, in addition to their experience and capabilities, determines their value to an employer. Economically rational developers strive to become commiters to high-profile open source projects to further their careers, which in turn generates more recognition, independence, and job security},
   Keywords = {Open source software; Costs; Environmental economics; Ecosystems; Companies; Licenses; Hardware; Boosting; Business; Web server; software development; open source software},
   Year = {2007} }




@misc{
WagstromHerbsleb-213,
   Author = {Wagstrom, Patrick and Herbsleb, James D. and Kraut, Robert E. and Mockus, Audris},
   Title = {The impact of commercial organizations on volunteer participation in an online community},
   Pages = {1--40},
   Year = {2010} }




@article{
StewartGosain-155,
   Author = {Stewart, Katherine J. and Gosain, Sanjay},
   Title = {The Impact of Ideology on Effectiveness in Open Source Software Development Teams},
   Journal = {MIS quarterly},
   Volume = {30},
   Number = {2},
   Pages = {291-314},
   DOI = {10.2307/25148732},
   Note = {Journal Article
http://www.syndetics.com/index.aspx?isbn=/sc.gif&issn=0276-7783&client=summontrial;http://www.syndetics.com/index.aspx?isbn=/mc.gif&issn=0276-7783&client=summontrial;http://www.syndetics.com/index.aspx?isbn=/lc.gif&issn=0276-7783&client=summontrial;},
   Abstract = {Open source software (OSS) community ideology framework and a theoretical model are developed to show adherence to components of the ideology impacts effectiveness in OSS teams. It shows that some shared ideological components have a positive impact on team effectiveness by increasing trust and communication quality, while some have negative effects by either reducing input to the team or by reducing task completion.;The emerging work on understanding open source software has questioned what leads to effectiveness in OSS development teams in the absence of formal controls, and it has pointed to the importance of ideology. This paper develops a framework of the OSS community ideology (including specific norms, beliefs, and values) and a theoretical model to show how adherence to components of the ideology impacts effectiveness in the OSS team. The model is based on the idea that the tenets of the OSS ideology motivate behaviors that enhance cognitive trust and communication quality and encourage identification with the project team, which enhances effective trust. Trust and communication in turn impact OSS team effectiveness. The research considers to kinds of effectiveness in OSS teams: the attraction and retention of developer input and the generation of project outputs. Hypotheses regarding antecedents to each are developed. Hypotheses are tested using survey and objective data on OSS projects. Results support the main thesis that OSS team ideology impacts OSS team effectiveness and reveal that different components impact effectiveness in different ways. Of particular interest is the finding that adherence to some ideological components was beneficial to the effectiveness of the team in terms of attracting and retaining input, but detrimental to the output of the team. Theoretical and practical implications are discussed. [PUBLICATION ABSTRACT];The emerging work on understanding open source software has questioned what leads to effectiveness in OSS development teams in the absence of formal controls, and it has pointed to the importance of ideology. This paper develops a framework of the OSS community ideology (including specific norms, beliefs, and values) and a theoretical model to show how adherence to components of the ideology impacts effectiveness in OSS teams. The model is based on the idea that the tenets of the OSS ideology motivate behaviors that enhance cognitive trust and communication quality and encourage identification with the project team, which enhances affective trust. Trust and communication in turn impact OSS team effectiveness. The research considers two kinds of effectiveness in OSS teams: the attraction and retention of developer input and the generation of project outputs. Hypotheses regarding antecedents to each are developed. Hypotheses are tested using survey and objective data on OSS projects. Results support the main thesis that OSS team members' adherence to the tenets of the OSS community ideology impacts OSS team effectiveness and reveal that different components impact effectiveness in different ways. Of particular interest is the finding that adherence to some ideological components was beneficial to the effectiveness of the team in terms of attracting and retaining input, but detrimental to the output of the team. Theoretical and practical implications are discussed.;},
   Keywords = {Communities; Computer software; Corporate culture; Design and construction; Effectiveness; Factor analysis; Free software; Group work in research; Hypotheses; Hypothesis testing; Ideology; Impact analysis; Influence; Information storage and retrieval systems; Motivation; Open source software; Organizational behavior; Public domain; Public software; Religious freedom; Software engineering; Studies; Teams; Teamwork; Trust; Work groups},
   Year = {2006} }




@article{
Riehle-186,
   Author = {Riehle, Dirk},
   Title = {The innovations of open source},
   Journal = {Computer},
   Volume = {52},
   Number = {4},
   Pages = {59-63},
   Year = {2019} }




@inproceedings{
SpijkermanJansen-184,
   Author = {Spijkerman, Zeena and Jansen, Slinger},
   Title = {The open source software business model blueprint: A comparative analysis of 10 open source companies.},
   BookTitle = {SiBW},
   Series= {SiBW},
   Pages = {128-143},
   Year = {2018} }




@misc{
Wiley-44,
   Author = {Wiley, Interscience Online Service},
   Title = {the promise of research on opensource software},
   Publisher = {Wiley},
   Number = {8},
   Month = {2000-01-01},
   Note = {S482.3/P4395.1
Journal, Electronic ER  -},
   Keywords = {Pesticides},
   ISBN = {1526-498X},
   Year = {2006} }




@article{
Riehle-157,
   Author = {Riehle, Dirk},
   Title = {The single-vendor commercial open course business model},
   Journal = {Information Systems and e-Business Management},
   Volume = {10},
   Number = {1},
   Pages = {5-17},
   DOI = {10.1007/s10257-010-0149-x},
   Note = {identifier: 149},
   Abstract = {Single-vendor commercial open source software projects are open source software projects that are owned by a single firm that derives a direct and significant revenue stream from the software. Single-vendor commercial open source at first glance represents an economic paradox: How can a firm earn money if it is making its product available for free as open source? This paper presents the core properties of single-vendor open source business models and discusses how they work. Using a single-vendor open source approach, firms can get to market faster with a superior product at lower cost than possible for traditional competitors. The paper shows how these benefits accrue from an engaged and self-supporting user community. Lacking any prior comprehensive reference, this paper is based on an analysis of public statements by practitioners of single-vendor open source. It forges the various anecdotes into a coherent description of revenue generation strategies and relevant business functions.},
   Year = {2012} }




@article{
Gonzalez-BarahonaRobles-185,
   Author = {Gonzalez-Barahona, Jesus M. and Robles, Gregorio},
   Title = {Trends in Free, Libre, Open Source Software Communities: From Volunteers to Companies/Aktuelle Trends in Free-, Libre-, und Open-Source-Software-Gemeinschaften: Von Freiwilligen zu Unternehmen},
   Journal = {it-Information Technology},
   Volume = {55},
   Number = {5},
   Pages = {173-180},
   Year = {2013} }




@book{
OsterlohRota-225,
   Author = {Osterloh, Margit and Rota, Sandra and Kuster, Bernhard},
   Title = {Trust and commerce in open source--a contradiction?},
   Publisher = {na},
   Year = {2002} }




@article{
ZhangLiu-191,
   Author = {Zhang, Yuxia and Liu, Hui and Tan, Xin and Zhou, Minghui and Jin, Zhi and Zhu, Jiaxin},
   Title = {Turnover of companies in OpenStack: Prevalence and rationale},
   Journal = {ACM Transactions on Software Engineering and Methodology (TOSEM)},
   Volume = {31},
   Number = {4},
   Pages = {1-24},
   Year = {2022} }




@article{
EconomidesKatsamakas-43,
   Author = {Economides, Nicholas and Katsamakas, Evangelos},
   Title = {Two-Sided Competition of Proprietary vs. Open Source Technology Platforms and the Implications for the Software Industry},
   Journal = {Management Science},
   Volume = {52},
   Number = {7},
   Pages = {1057-1071},
   DOI = {10.1287/mnsc.1060.0549},
   Note = {identifier: 10.1287/mnsc.1060.0549},
   Year = {2006} }




@article{
J.D.-38,
   Author = {J., M. Gonzalez-Barahona and D., Izquierdo-Cortazar and S., Maffulli and G., Robles},
   Title = {Understanding How Companies Interact with Free Software Communities},
   Journal = {IEEE Software},
   Volume = {30},
   Number = {5},
   Pages = {38-45},
   DOI = {10.1109/MS.2013.95},
   Note = {IEEE Software
IEEE Software},
   Abstract = {When free, open source software development communities work with companies that use their output, it's especially important for both parties to understand how this collaboration is performing. The use of data analytics techniques on software development repositories can improve factual knowledge about performance metrics.
When free, open source software development communities work with companies that use their output, it's especially important for both parties to understand how this collaboration is performing. The use of data analytics techniques on software development repositories can improve factual knowledge about performance metrics.},
   Keywords = {Software analytics; Software measurement; Electronic mail; Open source software; Statistics; Software analytics; Software measurement; Electronic mail; Open source software; Statistics; computing milieu; software analytics; process metrics; measurement; software engineering; statistics},
   Year = {2013} }




@article{
DanielMaruping-187,
   Author = {Daniel, Sherae and Maruping, Likoebe and Cataldo, Marcelo and Herbsleb, James},
   Title = {When cultures clash: Participation in open source communities and its implications for organizational commitment},
   Journal = {ICIS},
   Year = {2011} }




@article{
DiasSteinmacher-226,
   Author = {Dias, Luis Felipe and Steinmacher, Igor and Pinto, Gustavo},
   Title = {Who drives company-owned OSS projects: internal or external members?},
   Journal = {Journal of the Brazilian Computer Society},
   Volume = {24},
   Number = {1},
   Pages = {1--17},
   Year = {2018} }




@article{
Andersen-GottGhinea-27,
   Author = {Andersen-Gott, Morten and Ghinea, Gheorghita and Bygstad, Bendik},
   Title = {Why do commercial companies contribute to open source software?},
   Journal = {International Journal of Information Management},
   Volume = {32},
   Number = {2},
   Pages = {106-117},
   DOI = {10.1016/j.ijinfomgt.2011.10.003},
   Note = {item_number: S026840121100123X
identifier: S026840121100123X},
   Abstract = {Many researchers have pointed out that the open source movement is an interesting phenomenon that is difficult to explain with conventional economic theories. However, while there is no shortage on research on individuals' motivation for contributing to open source, few have investigated the commercial companies' motivations for doing the same. A case study was conducted at three different companies from the IT service industry, to investigate three possible drivers: sale of complimentary services, innovation and opensourcing (outsourcing). We offer three conclusions. First, we identified three main drivers for contributing to open source, which are (a) selling complimentary services, (b) building greater innovative capability and (c) cost reduction through opensourcing to an external community. Second, while previous research has documented that the most important driver is selling complimentary services, we found that this picture is too simple. Our evidence points to a broader set of motivations, in the sense that all our cases exhibit combinations of the three drivers. Finally, our findings suggest that there might be a shift in how commercial companies view open source software. The companies interviewed have all expressed a moral obligation to contribute to open source. [PUBLICATION ABSTRACT];► Selling complimentary services is an important way of appropriating monetary rewards from open source development. ► Companies interviewed have all expressed a moral obligation to contribute to open source. ► Innovation is a strong driver for open source software development. ► Limited evidence showing that commercial companies are contributing to open source as a way of making money. Many researchers have pointed out that the open source movement is an interesting phenomenon that is difficult to explain with conventional economic theories. However, while there is no shortage on research on individuals’ motivation for contributing to open source, few have investigated the commercial companies’ motivations for doing the same. A case study was conducted at three different companies from the IT service industry, to investigate three possible drivers: sale of complimentary services, innovation and opensourcing (outsourcing). We offer three conclusions. First, we identified three main drivers for contributing to open source, which are (a) selling complimentary services, (b) building greater innovative capability and (c) cost reduction through opensourcing to an external community. Second, while previous research has documented that the most important driver is selling complimentary services, we found that this picture is too simple. Our evidence points to a broader set of motivations, in the sense that all our cases exhibit combinations of the three drivers. Finally, our findings suggest that there might be a shift in how commercial companies view open source software. The companies interviewed have all expressed a moral obligation to contribute to open source.;Byline: Morten Andersen-Gott (a), Gheorghita Ghinea (a)(b), Bendik Bygstad (b) Keywords: Open source software; Commercial; Drivers a* Selling complimentary services is an important way of appropriating monetary rewards from open source development. a* Companies interviewed have all expressed a moral obligation to contribute to open source. a* Innovation is a strong driver for open source software development. a* Limited evidence showing that commercial companies are contributing to open source as a way of making money. Author Affiliation: (a) Brunel University, Kingston Lane, Uxbridge, Middlesex, United Kingdom (b) Norwegian School of Information Technology, Norway;a* Selling complimentary services is an important way of appropriating monetary rewards from open source development. a* Companies interviewed have all expressed a moral obligation to contribute to open source. a* Innovation is a strong driver for open source software development. a* Limited evidence showing that commercial companies are contributing to open source as a way of making money.;},
   Keywords = {Commercial; Companies; Drivers; High tech industries; Motivation; Open source software; Programming; Public domain; Public software; Studies; Technological change},
   Year = {2012} }



@incollection{KRISHNAMURTHY2006165,
title = {8 - Bounty Programs in Free/Libre/Open Source Software},
booktitle = {The Economics of Open Source Software Development},
publisher = {Elsevier},
address = {Amsterdam},
pages = {165-183},
year = {2006},
isbn = {978-0-444-52769-1},
doi = {https://doi.org/10.1016/B978-044452769-1/50008-1},
author = {Sandeep Krishnamurthy and Arvind K. Tripathi},
}

@article{zhou2021studying,
  title={Studying backers and hunters in bounty issue addressing process of open source projects},
  author={Zhou, Jiayuan and Wang, Shaowei and Zhang, Haoxiang and Chen, Tse-Hsun and Hassan, Ahmed E},
  journal={Empirical Software Engineering},
  volume={26},
  number={4},
  pages={81},
  year={2021},
  publisher={Springer}
}
